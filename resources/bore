local function log(level, msg)
    if level == 0 then
        term.setTextColor(colors.red)
        print("[CRIT] "..msg)
    elseif level == 1 then
        term.setTextColor(colors.yellow)
        print("[WARN] "..msg)
    elseif level == 2 then
        term.setTextColor(colors.white)
        print("[INFO] "..msg)
    end
    term.setTextColor(colors.white)
end

log(2,"bore version: 10")
if table.getn(arg) == 0 then
    log(2,"Usage: bore <depth> <width> <height>. Place turtle at bottom left of the tunnel, facing the direction you want to bore.")
    return
end

local function turn(direction, orientation)
    local finalorientation = 0
    local delta = 0
    if direction == "f" then
        delta = math.fmod(5 - orientation, 4) - 1
        finalorientation = 0
    elseif direction == "r" then
        delta = 1 - math.fmod(orientation, 4)
        finalorientation = 1
    elseif direction == "b" then
        delta = 2 - math.fmod(orientation, 4)
        finalorientation = 2
    elseif direction == "l" then
        delta = math.fmod(5 - orientation, 4) - 2
        finalorientation = 3
    end
    print("Turning "..direction.." from "..orientation..", delta: "..delta)
    while delta ~= 0 do
        if delta < 0 then
            turtle.turnLeft()
            delta = delta + 1
        else
            turtle.turnRight()
            delta = delta - 1
        end
    end
    return finalorientation
end

local function forceForward()
    while(not turtle.forward()) do  
        turtle.dig()
    end
end

local function forceUp()
    while(not turtle.up()) do  
        turtle.digUp()
    end
end

local function forceDown()
    while(not turtle.down()) do  
        turtle.digDown()
    end
end


depth = tonumber(arg[1])
width = tonumber(arg[2])
height = tonumber(arg[3])
log(2, "Mining a volume of depth: "..depth..", width: "..width..", height: "..height)
-- (TODO) Make sure this calculation is correct lol
requiredFuel = (depth + 1) * width * height + height


if requiredFuel > turtle.getFuelLevel() then
    log(0, "Not enough fuel. You need at least "..requiredFuel)
    return
end

local orientation = 0

local odd = (math.fmod(width,2) == 1)
for y=1,height do
    for x=1,width do
        for z=1,depth-1 do
            forceForward()
        end
        forceForward()
        if x ~= width then
            if math.fmod(y,2) == 1 then
                orientation = turn("r", orientation)
            else
                orientation = turn("l", orientation)
            end
            forceForward()
            if math.fmod(x,2) == 1 then
                if odd and math.fmod(y,2) == 0 then
                    orientation = turn("f", orientation)
                else
                    orientation = turn("b", orientation)
                end
            else
                if odd and math.fmod(y,2) == 0 then
                    orientation = turn("b", orientation)
                else
                    orientation = turn("f", orientation)
                end
            end
        end
    
    end
    if y ~= height then 
        forceUp()
        if (odd and math.fmod(y,2) == 0)  or not odd then
            orientation = turn("f", orientation)
        else
            orientation = turn("b", orientation)
        end
    end
end

for i=1,height do
    forceDown()
end